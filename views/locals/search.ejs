
<!-- 지역 검색 -->
<div class="row my-5">
  <div class="col">
      <h1 class="text-center">지역검색</h1>
      <div class="row justify-content-end">
          <form class="col-6 col-lg-3 col-md-4" name="frm">
              <div class="input-group">
                  <input class="form-control" placeholder="검색어" name="query" value="인하">
                  <button class="btn btn-primary">검색</button>
              </div>
          </form>
      </div>
      <hr>
      <div id="div_locals"></div>
      <!-- 페이지 이동 -->
      <div class="text-center">
          <button id="prev" class="btn btn-primary">이전</button>
          <span id="span_page">1/10</span>
          <button id="next" class="btn btn-primary">다음</button>
      </div>
  </div>
</div>
<!-- 템플릿 -->
<script type="x-handlebars-template" id="temp_locals">
  <table class="table">
      {{#each documents}}
      <tr>
          <td>{{place_name}}</td>
          <td>{{address_name}}</td>
          <td>{{phone}}</td>
          <td><button class="btn btn-primary btn-sm" local="{{toString @this}}">즐겨찾기</button></td>
      </tr>
      {{/each}}
  </table>
</script>
<script>
  Handlebars.registerHelper("toString", function(local){
      // stringify -> Object를 String 형태로 바꿔줌
      return JSON.stringify(local);
  })
</script>
<script type="module">
  import { app } from '/javascripts/firebaseInit.js';
  import { getDatabase, ref, set, get } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";
  const db = getDatabase(app);

  let page=1;
  let query=$(frm.query).val();
  getLocals();

  $(frm).on("submit", function(e){
      e.preventDefault();
      query=$(frm.query).val();
      page=1;
      getLocals();
  })

  // 즐겨찾기 버튼 클릭 시
  // async는 await와 짝꿍
  $("#div_locals").on("click", ".btn-primary", async function(){
      if(!sessionStorage.getItem("email")){
          // target이라는 변수 안에 /locals이 저장
          sessionStorage.setItem("target", "/locals");
          location.href='/users/login';
      } else { // 로그인이 된 경우
          // JSON.parse -> String 형태로 바꾼 값을 다시 JSON Object로 바꿈
          const local = JSON.parse($(this).attr("local"));
          console.log(local);
          const ref_local = `favorite/${sessionStorage.getItem("uid")}/${local.id}`;
          const snapshot = await get(ref(db, ref_local));
          if(snapshot.val()) {
              alert("이미 등록되어있습니다")
          } else {
              await set(ref(db, ref_local), local);
              alert("등록되었습니다")
          }
      }
  });

  //Event of next button
  $("#next").on("click", function(){
      page++;
      getLocals();
  });

  //Event of prev button
  $("#prev").on("click", function(){
      page--;
      getLocals();
  });

  function getLocals(){
      $.ajax({
          type:"get",
          url: "https://dapi.kakao.com/v2/local/search/keyword.json",
          headers: { Authorization: "KakaoAK dbb3283e72bfc45225288e919613ad4c" },
          data:{page: page, query:query, size:5},
          success:function(data){
              console.log(data);
              let temp=Handlebars.compile($("#temp_locals").html());
              $("#div_locals").html(temp(data))

              let last = Math.ceil(data.meta.pageable_count / 5);
              $("#span_page").html(page + "/" + last);

              if (page == 1) $("#prev").attr("disabled", true);
              else $("#prev").attr("disabled", false);

              if (data.meta.is_end) $("#next").attr("disabled", true);
              else $("#next").attr("disabled", false);
          }
      });
  }
</script>